package visao;

import controle.UsuarioC;
import modelo.dominio.No;
import controle.DadosC;
import java.io.File;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jefferson
 */
public class JFramePrincipal extends javax.swing.JFrame {
    private JFileChooser jFCEscolherArquivo;
    String[] uf = {"AC","AL","AM","AP","BA","BR","CE","DF","ES","GO","MA","MG","MS","MT","PA","PB","PE","PI","PR","RJ","RN","RO","RR","RS","SC","SE","SP","TO"};
    // Atributo para acessar a classe de controle Estruturas de Dados
    private DadosC listaDE2;


    /**
     * Creates new form JFramePrincipal
     */
    public JFramePrincipal() {
        initComponents();

        // Posiicionando a tela JFramePrincipal ao centro da tela do usuário
        setLocationRelativeTo(null);
    }

    public JComboBox<String> getSelectItem() {
        return this.jCBTipo;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelLista = new javax.swing.JPanel();
        jBCL = new javax.swing.JButton();
        jBLL = new javax.swing.JButton();
        jPanelOperacoes = new javax.swing.JPanel();
        jBCadastrar = new javax.swing.JButton();
        jBForgout = new javax.swing.JButton();
        jBEditarCadastro = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jBLerCSV = new javax.swing.JButton();
        jCBTipo = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jBGravarBD = new javax.swing.JButton();
        jBSelecionarBD = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Estruturas de Dados");

        jPanelLista.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Lista", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jBCL.setText("Criar lista");
        jBCL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCLActionPerformed(evt);
            }
        });

        jBLL.setText("Limpar lista");
        jBLL.setEnabled(false);
        jBLL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLLActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelListaLayout = new javax.swing.GroupLayout(jPanelLista);
        jPanelLista.setLayout(jPanelListaLayout);
        jPanelListaLayout.setHorizontalGroup(
            jPanelListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jBLL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jBCL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanelListaLayout.setVerticalGroup(
            jPanelListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelListaLayout.createSequentialGroup()
                .addComponent(jBCL, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBLL))
        );

        jPanelOperacoes.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Operações", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jBCadastrar.setText("Cadastrar Gerente");
        jBCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCadastrarActionPerformed(evt);
            }
        });

        jBForgout.setText("Esqueci a senha");
        jBForgout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBForgoutActionPerformed(evt);
            }
        });

        jBEditarCadastro.setText("Editar Cadastro");
        jBEditarCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEditarCadastroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelOperacoesLayout = new javax.swing.GroupLayout(jPanelOperacoes);
        jPanelOperacoes.setLayout(jPanelOperacoesLayout);
        jPanelOperacoesLayout.setHorizontalGroup(
            jPanelOperacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jBCadastrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jBForgout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jBEditarCadastro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanelOperacoesLayout.setVerticalGroup(
            jPanelOperacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOperacoesLayout.createSequentialGroup()
                .addComponent(jBCadastrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBForgout)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBEditarCadastro)
                .addGap(58, 58, 58))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, ".JSON", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jBLerCSV.setText("Ler TXT");
        jBLerCSV.setEnabled(false);
        jBLerCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLerCSVActionPerformed(evt);
            }
        });

        jCBTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Candidato", "Eleitorado" }));
        jCBTipo.setName(""); // NOI18N
        jCBTipo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBTipoItemStateChanged(evt);
            }
        });
        jCBTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBTipoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jBLerCSV, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCBTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBLerCSV)
                    .addComponent(jCBTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(66, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Banco de Dados", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jBGravarBD.setText("Gravar");
        jBGravarBD.setEnabled(false);
        jBGravarBD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGravarBDActionPerformed(evt);
            }
        });

        jBSelecionarBD.setText("Selecionar");
        jBSelecionarBD.setEnabled(false);
        jBSelecionarBD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSelecionarBDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jBSelecionarBD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
            .addComponent(jBGravarBD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jBGravarBD)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBSelecionarBD)
                .addGap(58, 58, 58))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelLista, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelOperacoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanelLista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelOperacoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Método da interface JFramePrincipal para criar lista
    private void jBCLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCLActionPerformed

        // Cria uma instância da classe Estruturas de Dados
        this.listaDE2 = new DadosC();


        jBCL.setEnabled(false);  // Desabilitando o botão Criar lista

        jBLL.setEnabled(true);        // habilitando o botão Limpar lista
        jBEditarCadastro.setEnabled(true);   // habilitando o botão Alterar
        jBLerCSV.setEnabled(true);    // habilitando o botão CSV

        jBSelecionarBD.setEnabled(true); // habilitando o botão Selecionar BD


    }//GEN-LAST:event_jBCLActionPerformed

    // Método da interface JFramePrincipal para limpar lista
    private void jBLLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLLActionPerformed

        this.listaDE2.limparLista(this.listaDE2);  // Tornando a lista vazia

        jBLL.setEnabled(false); // Habilitando o botão Limpar lista
        jBCL.setEnabled(true);  // Habilitando o botão Criar lista

        jBForgout.setEnabled(false);      // Desabilitando o botão Remover
        jBEditarCadastro.setEnabled(false);      // Desabilitando o botão Alterar

        jBLerCSV.setEnabled(true);        // Habilitando o botão CSV

        jBGravarBD.setEnabled(false);     // Desabilitando o botão gravar
        jBSelecionarBD.setEnabled(false); // Desabilitando o botão selecionar


    }//GEN-LAST:event_jBLLActionPerformed

    // Método da interface JFramePrincipal para inserir os dados na lista
    private void jBCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCadastrarActionPerformed

        JFrameCadastrarGerente jfp = new JFrameCadastrarGerente();
        jfp.setVisible(true);

        dispose();


    }//GEN-LAST:event_jBCadastrarActionPerformed

    private void jBForgoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBForgoutActionPerformed

    }//GEN-LAST:event_jBForgoutActionPerformed

    private void jBEditarCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEditarCadastroActionPerformed

        

    }//GEN-LAST:event_jBEditarCadastroActionPerformed

    private void jBLerCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLerCSVActionPerformed

        // Cria uma instância do selecionador de arquivos.
        this.jFCEscolherArquivo = new JFileChooser();

        // Define o diretório atual.
        // Nesse caso, a caixa será aberta em c:
        this.jFCEscolherArquivo.setCurrentDirectory(new File("C:\\Users\\Bruno\\Downloads\\consulta_cand_2016 (1)"));

        // Permite que seja seleciodo apenas arquivos, diretórios ou arquivos e diretórios.
        // FILES_ONLY = instrução para exibir apenas arquivos.
        this.jFCEscolherArquivo.setFileSelectionMode(JFileChooser.FILES_ONLY);

        // Coloca a opção 'Todos os arquivos' disponível e quando selecionada, qualquer extensão de arquivo poderá ser utilizada,
        // desde que se tenha um método para trabalhar o arquivo.
        this.jFCEscolherArquivo.setAcceptAllFileFilterUsed(true);

        // Adiciona na caixa de diálogo os tipos de arquivos que poderão ser selecionados.
        this.jFCEscolherArquivo.addChoosableFileFilter(new FileNameExtensionFilter("PDF Documents", "pdf"));
        this.jFCEscolherArquivo.addChoosableFileFilter(new FileNameExtensionFilter("MS Office Documents", ".csv", "docx", "xlsx", "pptx"));
        this.jFCEscolherArquivo.addChoosableFileFilter(new FileNameExtensionFilter("Images", "jpg", "png", "gif", "bmp"));
        this.jFCEscolherArquivo.addChoosableFileFilter(new FileNameExtensionFilter("Txt", "txt", "txt"));

        // Verifica se algum arquivo foi selecionado
        if (this.jFCEscolherArquivo.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {

            JOptionPane.showMessageDialog(null, "Arquivo carregado com sucesso!");

            // Passa a lista e o caminho onde o arquivo .csv está.
            // Se foi possível ler o arquivo, apresenta os dados.
            if (this.listaDE2.lerArquivoTXT(this.listaDE2, this.jFCEscolherArquivo.getSelectedFile(), jCBTipo.getSelectedItem().toString())) {

                //this.mostrarListaCSVeBD(); // Mostrando os dados no JTable
                jBLerCSV.setEnabled(false);      // Desabilitando o botão CSV

                jBGravarBD.setEnabled(true);     // Haabilitando o botão gravar
                jBSelecionarBD.setEnabled(true); // Habilitando o botão selecionar

            } else {
                JOptionPane.showMessageDialog(null, "Erro ao importar os dados...");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Arquivo não selecionado!");
        }

    }//GEN-LAST:event_jBLerCSVActionPerformed

    private void jBGravarBDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGravarBDActionPerformed

        // Verificando se foi possível inserir os dados em uma determinada posição válida da lista
        JOptionPane.showMessageDialog(null, this.listaDE2.getInicioDaLista().getObjctDados().getAno());
        if (this.listaDE2.gravarDadosBanco(this.listaDE2)) {
            JOptionPane.showMessageDialog(null, "Dados gravados no BD Oracle com sucesso...");
        } else {
            JOptionPane.showMessageDialog(null, "Erro ao gravar os dados no BD Oracle...");
        }

    }//GEN-LAST:event_jBGravarBDActionPerformed

    private void jBSelecionarBDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSelecionarBDActionPerformed
        
        for (int i = 0; i < uf.length; i++) {
            // Verificando se foi possível inserir os dados em uma determinada posição válida da lista
            if (this.listaDE2.selecionarDadosBD(this.listaDE2, this.uf[i])) {
                if(this.listaDE2.getQuantidadeDeNos() > 1){
                    System.out.println(this.uf[i]);
                    this.listaDE2.escreverArquivoJson(this.listaDE2, this.jCBTipo.getSelectedItem().toString());
                    this.listaDE2.limparLista(this.listaDE2);
                    this.listaDE2 = new DadosC();
                }else{
                    System.out.println("Estado não existe, pegando próximo.." + this.uf[i]);
                }
            }
            
        }
        jBSelecionarBD.setEnabled(false); // habilitando o botão Selecionar BD
        jBGravarBD.setEnabled(true);      // habilitando o botão Gravar BD

    }//GEN-LAST:event_jBSelecionarBDActionPerformed

    private void jCBTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBTipoActionPerformed
        
    }//GEN-LAST:event_jCBTipoActionPerformed

    private void jCBTipoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBTipoItemStateChanged

    }//GEN-LAST:event_jCBTipoItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new JFramePrincipal().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBCL;
    private javax.swing.JButton jBCadastrar;
    private javax.swing.JButton jBEditarCadastro;
    private javax.swing.JButton jBForgout;
    private javax.swing.JButton jBGravarBD;
    private javax.swing.JButton jBLL;
    private javax.swing.JButton jBLerCSV;
    private javax.swing.JButton jBSelecionarBD;
    private javax.swing.JComboBox<String> jCBTipo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelLista;
    private javax.swing.JPanel jPanelOperacoes;
    // End of variables declaration//GEN-END:variables
}
